% PHYLOGENY
%
% phylogeny workflow for CHASE domain in plant proteomes
%
%
% Copyright:: 2016-2019 JÃ¶rgen Brandt <joergen@cuneiform-lang.org>
%
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%
%    http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.
%
%
% Plant proteome data sources:
% - http://gramene.org/
% - https://jgi.doe.gov/
%
% In addition to a Cuneiform 3.0.4 interpreter the following tools
% need to be installed:
% - HMMER 3.1b2
% - Muscle 3.8.31
% - ClustalW 2.1
% - Phylip 3.696
% - Ghostscript 9.26
%
%--------------------------------------------------------------

%%====================================================================
%% Task definitions
%%====================================================================

def gunzip( gz : File ) -> <out : File>
in Bash *{
  out=unzipped_${gz%.gz}
  gzip -c -d $gz > $out
}*

def cat( lst : [File] ) -> <out : File>
in Bash *{
  out=out.txt
  cat ${lst[@]} > $out
}*

def hmmbuild( sto : File ) -> <hmm : File>
in Bash *{
  hmm=${sto%.sto}.hmm
  hmmbuild $hmm $sto
}*

def sto2fa( sto : File ) -> <fa : File>
in Bash *{
  fa=${sto%.sto}.fa
  esl-reformat fasta $sto > $fa
}*

def hmmsearch( hmm : File, fa : File ) -> <hits : File>
in Bash *{
  hits=hits_${fa%.fa}.sto
  hmmsearch -A $hits $hmm $fa
}*

def muscle( fa : File ) -> <msa : File>
in Bash *{
  msa=msa.fa
  muscle -quiet -in $fa > $msa
}*

def clustalw-tree( fa : File ) -> <ph : File>
in Bash *{
  ph=${fa%.fa}.ph
  clustalw -tree -infile=$fa
}*

def phylip-drawtree( ph : File ) -> <pdf : File>
in Bash *{
  pdf=tree.pdf
  ln -sf $ph intree
  printf "C\n2\nY\n" | phylip drawtree
  ps2pdf plotfile $pdf
}*


%%====================================================================
%% Input data
%%====================================================================

% CHASE seed alignment
let chase-seed-sto : File = 'seed/PF03924_seed.txt';

% plant gene indices
let fa-gz-lst : [File] =
  ['fa/Chlre4_all_proteins.fasta.gz',
   'fa/Poptr1_1_GeneModels_AllModels_20081112_aa.fasta.gz',
   'fa/proteins.Phypa1_1.AllModels.fasta.gz',
   'fa/Volca1.GeneCatalog_2007_09_13.proteins.fasta.gz',
   'fa/Selmo1_GeneModels_FilteredModels2_aa.fasta.gz',
   'fa/Arabidopsis_thaliana.TAIR10.pep.all.fa.gz',
   'fa/Oryza_sativa.IRGSP-1.0.pep.all.fa.gz' : File];


%%====================================================================
%% Workflow definition
%%====================================================================

let <hmm = hmm : File> =
  hmmbuild( sto = chase-seed-sto );

let fa-lst : [File] =
  for fa-gz : File <- fa-gz-lst do

    let <out = fa : File> =
      gunzip( gz = fa-gz );

    fa : File

  end;

let hits-fa-lst : [File] =
  for fa : File <- fa-lst do

    let <hits = chase-full-sto : File> =
      hmmsearch( hmm = hmm,
                 fa  = fa );

    let <fa = chase-full-fa : File> =
      sto2fa( sto = chase-full-sto );

    chase-full-fa : File

  end;

let <out = hits-fa : File> =
  cat( lst = hits-fa-lst );

let <msa = msa : File> =
  muscle( fa = hits-fa );

let <ph = ph : File> =
  clustalw-tree( fa = msa );

let <pdf = pdf : File> =
  phylip-drawtree( ph = ph );

%%====================================================================
%% Query
%%====================================================================

pdf;